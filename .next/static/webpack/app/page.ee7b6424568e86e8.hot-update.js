"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/pdfProcessor.ts":
/*!*****************************!*\
  !*** ./lib/pdfProcessor.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractTextFromPDF: function() { return /* binding */ extractTextFromPDF; }\n/* harmony export */ });\n/* harmony import */ var pdfjs_dist__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pdfjs-dist */ \"(app-pages-browser)/./node_modules/pdfjs-dist/build/pdf.mjs\");\n\n// Configure PDF.js worker - use a more reliable CDN\npdfjs_dist__WEBPACK_IMPORTED_MODULE_0__.GlobalWorkerOptions.workerSrc = \"https://unpkg.com/pdfjs-dist@\".concat(pdfjs_dist__WEBPACK_IMPORTED_MODULE_0__.version, \"/build/pdf.worker.min.js\");\n// Alternative: Try to use the legacy build for better compatibility\nif (true) {\n    pdfjs_dist__WEBPACK_IMPORTED_MODULE_0__.GlobalWorkerOptions.workerSrc = \"https://unpkg.com/pdfjs-dist@\".concat(pdfjs_dist__WEBPACK_IMPORTED_MODULE_0__.version, \"/legacy/build/pdf.worker.min.js\");\n}\nasync function extractTextFromPDF(file) {\n    try {\n        console.log(\"Starting PDF text extraction for file:\", file.name, \"Size:\", file.size);\n        const arrayBuffer = await file.arrayBuffer();\n        console.log(\"ArrayBuffer created, size:\", arrayBuffer.byteLength);\n        const pdf = await pdfjs_dist__WEBPACK_IMPORTED_MODULE_0__.getDocument({\n            data: arrayBuffer,\n            useSystemFonts: true,\n            disableFontFace: true\n        }).promise;\n        console.log(\"PDF loaded, pages:\", pdf.numPages);\n        let fullText = \"\";\n        for(let i = 1; i <= pdf.numPages; i++){\n            console.log(\"Processing page \".concat(i, \"/\").concat(pdf.numPages));\n            const page = await pdf.getPage(i);\n            const textContent = await page.getTextContent();\n            const pageText = textContent.items.map((item)=>{\n                if (item.str) {\n                    return item.str;\n                }\n                return \"\";\n            }).filter((text)=>text.trim().length > 0).join(\" \");\n            console.log(\"Page \".concat(i, \" text length:\"), pageText.length);\n            fullText += pageText + \"\\n\";\n        }\n        console.log(\"Total extracted text length:\", fullText.length);\n        console.log(\"First 200 characters:\", fullText.substring(0, 200));\n        if (fullText.trim().length === 0) {\n            throw new Error(\"No text could be extracted from the PDF. The PDF might be image-based or corrupted.\");\n        }\n        return fullText.trim();\n    } catch (error) {\n        console.error(\"Error extracting text from PDF:\", error);\n        throw new Error(\"Failed to extract text from PDF: \".concat(error.message));\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9wZGZQcm9jZXNzb3IudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0M7QUFFdEMsb0RBQW9EO0FBQ3BEQSwyREFBNEIsQ0FBQ0UsU0FBUyxHQUFHLGdDQUFpRCxPQUFqQkYsK0NBQWdCLEVBQUM7QUFFMUYsb0VBQW9FO0FBQ3BFLElBQUksSUFBa0IsRUFBYTtJQUNqQ0EsMkRBQTRCLENBQUNFLFNBQVMsR0FBRyxnQ0FBaUQsT0FBakJGLCtDQUFnQixFQUFDO0FBQzVGO0FBRU8sZUFBZUksbUJBQW1CQyxJQUFVO0lBQ2pELElBQUk7UUFDRkMsUUFBUUMsR0FBRyxDQUFDLDBDQUEwQ0YsS0FBS0csSUFBSSxFQUFFLFNBQVNILEtBQUtJLElBQUk7UUFFbkYsTUFBTUMsY0FBYyxNQUFNTCxLQUFLSyxXQUFXO1FBQzFDSixRQUFRQyxHQUFHLENBQUMsOEJBQThCRyxZQUFZQyxVQUFVO1FBRWhFLE1BQU1DLE1BQU0sTUFBTVosbURBQW9CLENBQUM7WUFDckNjLE1BQU1KO1lBQ05LLGdCQUFnQjtZQUNoQkMsaUJBQWlCO1FBQ25CLEdBQUdDLE9BQU87UUFFVlgsUUFBUUMsR0FBRyxDQUFDLHNCQUFzQkssSUFBSU0sUUFBUTtRQUM5QyxJQUFJQyxXQUFXO1FBRWYsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLEtBQUtSLElBQUlNLFFBQVEsRUFBRUUsSUFBSztZQUN0Q2QsUUFBUUMsR0FBRyxDQUFDLG1CQUF3QkssT0FBTFEsR0FBRSxLQUFnQixPQUFiUixJQUFJTSxRQUFRO1lBQ2hELE1BQU1HLE9BQU8sTUFBTVQsSUFBSVUsT0FBTyxDQUFDRjtZQUMvQixNQUFNRyxjQUFjLE1BQU1GLEtBQUtHLGNBQWM7WUFFN0MsTUFBTUMsV0FBV0YsWUFBWUcsS0FBSyxDQUMvQkMsR0FBRyxDQUFDLENBQUNDO2dCQUNKLElBQUlBLEtBQUtDLEdBQUcsRUFBRTtvQkFDWixPQUFPRCxLQUFLQyxHQUFHO2dCQUNqQjtnQkFDQSxPQUFPO1lBQ1QsR0FDQ0MsTUFBTSxDQUFDQyxDQUFBQSxPQUFRQSxLQUFLQyxJQUFJLEdBQUdDLE1BQU0sR0FBRyxHQUNwQ0MsSUFBSSxDQUFDO1lBRVI1QixRQUFRQyxHQUFHLENBQUMsUUFBVSxPQUFGYSxHQUFFLGtCQUFnQkssU0FBU1EsTUFBTTtZQUNyRGQsWUFBWU0sV0FBVztRQUN6QjtRQUVBbkIsUUFBUUMsR0FBRyxDQUFDLGdDQUFnQ1ksU0FBU2MsTUFBTTtRQUMzRDNCLFFBQVFDLEdBQUcsQ0FBQyx5QkFBeUJZLFNBQVNnQixTQUFTLENBQUMsR0FBRztRQUUzRCxJQUFJaEIsU0FBU2EsSUFBSSxHQUFHQyxNQUFNLEtBQUssR0FBRztZQUNoQyxNQUFNLElBQUlHLE1BQU07UUFDbEI7UUFFQSxPQUFPakIsU0FBU2EsSUFBSTtJQUN0QixFQUFFLE9BQU9LLE9BQU87UUFDZC9CLFFBQVErQixLQUFLLENBQUMsbUNBQW1DQTtRQUNqRCxNQUFNLElBQUlELE1BQU0sb0NBQWtELE9BQWRDLE1BQU1DLE9BQU87SUFDbkU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvcGRmUHJvY2Vzc29yLnRzPzMyMzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgcGRmanNMaWIgZnJvbSAncGRmanMtZGlzdCdcblxuLy8gQ29uZmlndXJlIFBERi5qcyB3b3JrZXIgLSB1c2UgYSBtb3JlIHJlbGlhYmxlIENETlxucGRmanNMaWIuR2xvYmFsV29ya2VyT3B0aW9ucy53b3JrZXJTcmMgPSBgaHR0cHM6Ly91bnBrZy5jb20vcGRmanMtZGlzdEAke3BkZmpzTGliLnZlcnNpb259L2J1aWxkL3BkZi53b3JrZXIubWluLmpzYFxuXG4vLyBBbHRlcm5hdGl2ZTogVHJ5IHRvIHVzZSB0aGUgbGVnYWN5IGJ1aWxkIGZvciBiZXR0ZXIgY29tcGF0aWJpbGl0eVxuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gIHBkZmpzTGliLkdsb2JhbFdvcmtlck9wdGlvbnMud29ya2VyU3JjID0gYGh0dHBzOi8vdW5wa2cuY29tL3BkZmpzLWRpc3RAJHtwZGZqc0xpYi52ZXJzaW9ufS9sZWdhY3kvYnVpbGQvcGRmLndvcmtlci5taW4uanNgXG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBleHRyYWN0VGV4dEZyb21QREYoZmlsZTogRmlsZSk6IFByb21pc2U8c3RyaW5nPiB7XG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coJ1N0YXJ0aW5nIFBERiB0ZXh0IGV4dHJhY3Rpb24gZm9yIGZpbGU6JywgZmlsZS5uYW1lLCAnU2l6ZTonLCBmaWxlLnNpemUpXG4gICAgXG4gICAgY29uc3QgYXJyYXlCdWZmZXIgPSBhd2FpdCBmaWxlLmFycmF5QnVmZmVyKClcbiAgICBjb25zb2xlLmxvZygnQXJyYXlCdWZmZXIgY3JlYXRlZCwgc2l6ZTonLCBhcnJheUJ1ZmZlci5ieXRlTGVuZ3RoKVxuICAgIFxuICAgIGNvbnN0IHBkZiA9IGF3YWl0IHBkZmpzTGliLmdldERvY3VtZW50KHsgXG4gICAgICBkYXRhOiBhcnJheUJ1ZmZlcixcbiAgICAgIHVzZVN5c3RlbUZvbnRzOiB0cnVlLFxuICAgICAgZGlzYWJsZUZvbnRGYWNlOiB0cnVlXG4gICAgfSkucHJvbWlzZVxuICAgIFxuICAgIGNvbnNvbGUubG9nKCdQREYgbG9hZGVkLCBwYWdlczonLCBwZGYubnVtUGFnZXMpXG4gICAgbGV0IGZ1bGxUZXh0ID0gJydcblxuICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IHBkZi5udW1QYWdlczsgaSsrKSB7XG4gICAgICBjb25zb2xlLmxvZyhgUHJvY2Vzc2luZyBwYWdlICR7aX0vJHtwZGYubnVtUGFnZXN9YClcbiAgICAgIGNvbnN0IHBhZ2UgPSBhd2FpdCBwZGYuZ2V0UGFnZShpKVxuICAgICAgY29uc3QgdGV4dENvbnRlbnQgPSBhd2FpdCBwYWdlLmdldFRleHRDb250ZW50KClcbiAgICAgIFxuICAgICAgY29uc3QgcGFnZVRleHQgPSB0ZXh0Q29udGVudC5pdGVtc1xuICAgICAgICAubWFwKChpdGVtOiBhbnkpID0+IHtcbiAgICAgICAgICBpZiAoaXRlbS5zdHIpIHtcbiAgICAgICAgICAgIHJldHVybiBpdGVtLnN0clxuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gJydcbiAgICAgICAgfSlcbiAgICAgICAgLmZpbHRlcih0ZXh0ID0+IHRleHQudHJpbSgpLmxlbmd0aCA+IDApXG4gICAgICAgIC5qb2luKCcgJylcbiAgICAgIFxuICAgICAgY29uc29sZS5sb2coYFBhZ2UgJHtpfSB0ZXh0IGxlbmd0aDpgLCBwYWdlVGV4dC5sZW5ndGgpXG4gICAgICBmdWxsVGV4dCArPSBwYWdlVGV4dCArICdcXG4nXG4gICAgfVxuXG4gICAgY29uc29sZS5sb2coJ1RvdGFsIGV4dHJhY3RlZCB0ZXh0IGxlbmd0aDonLCBmdWxsVGV4dC5sZW5ndGgpXG4gICAgY29uc29sZS5sb2coJ0ZpcnN0IDIwMCBjaGFyYWN0ZXJzOicsIGZ1bGxUZXh0LnN1YnN0cmluZygwLCAyMDApKVxuICAgIFxuICAgIGlmIChmdWxsVGV4dC50cmltKCkubGVuZ3RoID09PSAwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIHRleHQgY291bGQgYmUgZXh0cmFjdGVkIGZyb20gdGhlIFBERi4gVGhlIFBERiBtaWdodCBiZSBpbWFnZS1iYXNlZCBvciBjb3JydXB0ZWQuJylcbiAgICB9XG5cbiAgICByZXR1cm4gZnVsbFRleHQudHJpbSgpXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZXh0cmFjdGluZyB0ZXh0IGZyb20gUERGOicsIGVycm9yKVxuICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGV4dHJhY3QgdGV4dCBmcm9tIFBERjogJHtlcnJvci5tZXNzYWdlfWApXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJwZGZqc0xpYiIsIkdsb2JhbFdvcmtlck9wdGlvbnMiLCJ3b3JrZXJTcmMiLCJ2ZXJzaW9uIiwiZXh0cmFjdFRleHRGcm9tUERGIiwiZmlsZSIsImNvbnNvbGUiLCJsb2ciLCJuYW1lIiwic2l6ZSIsImFycmF5QnVmZmVyIiwiYnl0ZUxlbmd0aCIsInBkZiIsImdldERvY3VtZW50IiwiZGF0YSIsInVzZVN5c3RlbUZvbnRzIiwiZGlzYWJsZUZvbnRGYWNlIiwicHJvbWlzZSIsIm51bVBhZ2VzIiwiZnVsbFRleHQiLCJpIiwicGFnZSIsImdldFBhZ2UiLCJ0ZXh0Q29udGVudCIsImdldFRleHRDb250ZW50IiwicGFnZVRleHQiLCJpdGVtcyIsIm1hcCIsIml0ZW0iLCJzdHIiLCJmaWx0ZXIiLCJ0ZXh0IiwidHJpbSIsImxlbmd0aCIsImpvaW4iLCJzdWJzdHJpbmciLCJFcnJvciIsImVycm9yIiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/pdfProcessor.ts\n"));

/***/ })

});