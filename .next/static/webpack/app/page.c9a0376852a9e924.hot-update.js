"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/pdfProcessor.ts":
/*!*****************************!*\
  !*** ./lib/pdfProcessor.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractTextFromPDF: function() { return /* binding */ extractTextFromPDF; }\n/* harmony export */ });\n/* harmony import */ var pdfjs_dist__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pdfjs-dist */ \"(app-pages-browser)/./node_modules/pdfjs-dist/build/pdf.mjs\");\n\n// Configure PDF.js worker - use a more reliable CDN\npdfjs_dist__WEBPACK_IMPORTED_MODULE_0__.GlobalWorkerOptions.workerSrc = \"https://unpkg.com/pdfjs-dist@\".concat(pdfjs_dist__WEBPACK_IMPORTED_MODULE_0__.version, \"/build/pdf.worker.min.js\");\nasync function extractTextFromPDF(file) {\n    try {\n        console.log(\"Starting PDF text extraction for file:\", file.name, \"Size:\", file.size);\n        const arrayBuffer = await file.arrayBuffer();\n        console.log(\"ArrayBuffer created, size:\", arrayBuffer.byteLength);\n        const pdf = await pdfjs_dist__WEBPACK_IMPORTED_MODULE_0__.getDocument({\n            data: arrayBuffer,\n            useSystemFonts: true,\n            disableFontFace: true\n        }).promise;\n        console.log(\"PDF loaded, pages:\", pdf.numPages);\n        let fullText = \"\";\n        for(let i = 1; i <= pdf.numPages; i++){\n            console.log(\"Processing page \".concat(i, \"/\").concat(pdf.numPages));\n            const page = await pdf.getPage(i);\n            const textContent = await page.getTextContent();\n            const pageText = textContent.items.map((item)=>{\n                if (item.str) {\n                    return item.str;\n                }\n                return \"\";\n            }).filter((text)=>text.trim().length > 0).join(\" \");\n            console.log(\"Page \".concat(i, \" text length:\"), pageText.length);\n            fullText += pageText + \"\\n\";\n        }\n        console.log(\"Total extracted text length:\", fullText.length);\n        console.log(\"First 200 characters:\", fullText.substring(0, 200));\n        if (fullText.trim().length === 0) {\n            throw new Error(\"No text could be extracted from the PDF. The PDF might be image-based or corrupted.\");\n        }\n        return fullText.trim();\n    } catch (error) {\n        console.error(\"Error extracting text from PDF:\", error);\n        throw new Error(\"Failed to extract text from PDF: \".concat(error.message));\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9wZGZQcm9jZXNzb3IudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0M7QUFFdEMsb0RBQW9EO0FBQ3BEQSwyREFBNEIsQ0FBQ0UsU0FBUyxHQUFHLGdDQUFpRCxPQUFqQkYsK0NBQWdCLEVBQUM7QUFFbkYsZUFBZUksbUJBQW1CQyxJQUFVO0lBQ2pELElBQUk7UUFDRkMsUUFBUUMsR0FBRyxDQUFDLDBDQUEwQ0YsS0FBS0csSUFBSSxFQUFFLFNBQVNILEtBQUtJLElBQUk7UUFFbkYsTUFBTUMsY0FBYyxNQUFNTCxLQUFLSyxXQUFXO1FBQzFDSixRQUFRQyxHQUFHLENBQUMsOEJBQThCRyxZQUFZQyxVQUFVO1FBRWhFLE1BQU1DLE1BQU0sTUFBTVosbURBQW9CLENBQUM7WUFDckNjLE1BQU1KO1lBQ05LLGdCQUFnQjtZQUNoQkMsaUJBQWlCO1FBQ25CLEdBQUdDLE9BQU87UUFFVlgsUUFBUUMsR0FBRyxDQUFDLHNCQUFzQkssSUFBSU0sUUFBUTtRQUM5QyxJQUFJQyxXQUFXO1FBRWYsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLEtBQUtSLElBQUlNLFFBQVEsRUFBRUUsSUFBSztZQUN0Q2QsUUFBUUMsR0FBRyxDQUFDLG1CQUF3QkssT0FBTFEsR0FBRSxLQUFnQixPQUFiUixJQUFJTSxRQUFRO1lBQ2hELE1BQU1HLE9BQU8sTUFBTVQsSUFBSVUsT0FBTyxDQUFDRjtZQUMvQixNQUFNRyxjQUFjLE1BQU1GLEtBQUtHLGNBQWM7WUFFN0MsTUFBTUMsV0FBV0YsWUFBWUcsS0FBSyxDQUMvQkMsR0FBRyxDQUFDLENBQUNDO2dCQUNKLElBQUlBLEtBQUtDLEdBQUcsRUFBRTtvQkFDWixPQUFPRCxLQUFLQyxHQUFHO2dCQUNqQjtnQkFDQSxPQUFPO1lBQ1QsR0FDQ0MsTUFBTSxDQUFDQyxDQUFBQSxPQUFRQSxLQUFLQyxJQUFJLEdBQUdDLE1BQU0sR0FBRyxHQUNwQ0MsSUFBSSxDQUFDO1lBRVI1QixRQUFRQyxHQUFHLENBQUMsUUFBVSxPQUFGYSxHQUFFLGtCQUFnQkssU0FBU1EsTUFBTTtZQUNyRGQsWUFBWU0sV0FBVztRQUN6QjtRQUVBbkIsUUFBUUMsR0FBRyxDQUFDLGdDQUFnQ1ksU0FBU2MsTUFBTTtRQUMzRDNCLFFBQVFDLEdBQUcsQ0FBQyx5QkFBeUJZLFNBQVNnQixTQUFTLENBQUMsR0FBRztRQUUzRCxJQUFJaEIsU0FBU2EsSUFBSSxHQUFHQyxNQUFNLEtBQUssR0FBRztZQUNoQyxNQUFNLElBQUlHLE1BQU07UUFDbEI7UUFFQSxPQUFPakIsU0FBU2EsSUFBSTtJQUN0QixFQUFFLE9BQU9LLE9BQU87UUFDZC9CLFFBQVErQixLQUFLLENBQUMsbUNBQW1DQTtRQUNqRCxNQUFNLElBQUlELE1BQU0sb0NBQWtELE9BQWRDLE1BQU1DLE9BQU87SUFDbkU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvcGRmUHJvY2Vzc29yLnRzPzMyMzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgcGRmanNMaWIgZnJvbSAncGRmanMtZGlzdCdcblxuLy8gQ29uZmlndXJlIFBERi5qcyB3b3JrZXIgLSB1c2UgYSBtb3JlIHJlbGlhYmxlIENETlxucGRmanNMaWIuR2xvYmFsV29ya2VyT3B0aW9ucy53b3JrZXJTcmMgPSBgaHR0cHM6Ly91bnBrZy5jb20vcGRmanMtZGlzdEAke3BkZmpzTGliLnZlcnNpb259L2J1aWxkL3BkZi53b3JrZXIubWluLmpzYFxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZXh0cmFjdFRleHRGcm9tUERGKGZpbGU6IEZpbGUpOiBQcm9taXNlPHN0cmluZz4ge1xuICB0cnkge1xuICAgIGNvbnNvbGUubG9nKCdTdGFydGluZyBQREYgdGV4dCBleHRyYWN0aW9uIGZvciBmaWxlOicsIGZpbGUubmFtZSwgJ1NpemU6JywgZmlsZS5zaXplKVxuICAgIFxuICAgIGNvbnN0IGFycmF5QnVmZmVyID0gYXdhaXQgZmlsZS5hcnJheUJ1ZmZlcigpXG4gICAgY29uc29sZS5sb2coJ0FycmF5QnVmZmVyIGNyZWF0ZWQsIHNpemU6JywgYXJyYXlCdWZmZXIuYnl0ZUxlbmd0aClcbiAgICBcbiAgICBjb25zdCBwZGYgPSBhd2FpdCBwZGZqc0xpYi5nZXREb2N1bWVudCh7IFxuICAgICAgZGF0YTogYXJyYXlCdWZmZXIsXG4gICAgICB1c2VTeXN0ZW1Gb250czogdHJ1ZSxcbiAgICAgIGRpc2FibGVGb250RmFjZTogdHJ1ZVxuICAgIH0pLnByb21pc2VcbiAgICBcbiAgICBjb25zb2xlLmxvZygnUERGIGxvYWRlZCwgcGFnZXM6JywgcGRmLm51bVBhZ2VzKVxuICAgIGxldCBmdWxsVGV4dCA9ICcnXG5cbiAgICBmb3IgKGxldCBpID0gMTsgaSA8PSBwZGYubnVtUGFnZXM7IGkrKykge1xuICAgICAgY29uc29sZS5sb2coYFByb2Nlc3NpbmcgcGFnZSAke2l9LyR7cGRmLm51bVBhZ2VzfWApXG4gICAgICBjb25zdCBwYWdlID0gYXdhaXQgcGRmLmdldFBhZ2UoaSlcbiAgICAgIGNvbnN0IHRleHRDb250ZW50ID0gYXdhaXQgcGFnZS5nZXRUZXh0Q29udGVudCgpXG4gICAgICBcbiAgICAgIGNvbnN0IHBhZ2VUZXh0ID0gdGV4dENvbnRlbnQuaXRlbXNcbiAgICAgICAgLm1hcCgoaXRlbTogYW55KSA9PiB7XG4gICAgICAgICAgaWYgKGl0ZW0uc3RyKSB7XG4gICAgICAgICAgICByZXR1cm4gaXRlbS5zdHJcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuICcnXG4gICAgICAgIH0pXG4gICAgICAgIC5maWx0ZXIodGV4dCA9PiB0ZXh0LnRyaW0oKS5sZW5ndGggPiAwKVxuICAgICAgICAuam9pbignICcpXG4gICAgICBcbiAgICAgIGNvbnNvbGUubG9nKGBQYWdlICR7aX0gdGV4dCBsZW5ndGg6YCwgcGFnZVRleHQubGVuZ3RoKVxuICAgICAgZnVsbFRleHQgKz0gcGFnZVRleHQgKyAnXFxuJ1xuICAgIH1cblxuICAgIGNvbnNvbGUubG9nKCdUb3RhbCBleHRyYWN0ZWQgdGV4dCBsZW5ndGg6JywgZnVsbFRleHQubGVuZ3RoKVxuICAgIGNvbnNvbGUubG9nKCdGaXJzdCAyMDAgY2hhcmFjdGVyczonLCBmdWxsVGV4dC5zdWJzdHJpbmcoMCwgMjAwKSlcbiAgICBcbiAgICBpZiAoZnVsbFRleHQudHJpbSgpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyB0ZXh0IGNvdWxkIGJlIGV4dHJhY3RlZCBmcm9tIHRoZSBQREYuIFRoZSBQREYgbWlnaHQgYmUgaW1hZ2UtYmFzZWQgb3IgY29ycnVwdGVkLicpXG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bGxUZXh0LnRyaW0oKVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGV4dHJhY3RpbmcgdGV4dCBmcm9tIFBERjonLCBlcnJvcilcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBleHRyYWN0IHRleHQgZnJvbSBQREY6ICR7ZXJyb3IubWVzc2FnZX1gKVxuICB9XG59XG4iXSwibmFtZXMiOlsicGRmanNMaWIiLCJHbG9iYWxXb3JrZXJPcHRpb25zIiwid29ya2VyU3JjIiwidmVyc2lvbiIsImV4dHJhY3RUZXh0RnJvbVBERiIsImZpbGUiLCJjb25zb2xlIiwibG9nIiwibmFtZSIsInNpemUiLCJhcnJheUJ1ZmZlciIsImJ5dGVMZW5ndGgiLCJwZGYiLCJnZXREb2N1bWVudCIsImRhdGEiLCJ1c2VTeXN0ZW1Gb250cyIsImRpc2FibGVGb250RmFjZSIsInByb21pc2UiLCJudW1QYWdlcyIsImZ1bGxUZXh0IiwiaSIsInBhZ2UiLCJnZXRQYWdlIiwidGV4dENvbnRlbnQiLCJnZXRUZXh0Q29udGVudCIsInBhZ2VUZXh0IiwiaXRlbXMiLCJtYXAiLCJpdGVtIiwic3RyIiwiZmlsdGVyIiwidGV4dCIsInRyaW0iLCJsZW5ndGgiLCJqb2luIiwic3Vic3RyaW5nIiwiRXJyb3IiLCJlcnJvciIsIm1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/pdfProcessor.ts\n"));

/***/ })

});